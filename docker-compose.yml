version: '3.8'

services:
  # Frontend Development Service
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8080/tasks
    networks:
      - app-network
    container_name: task-frontend-dev

  # Frontend Production Service
  frontend-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://localhost:8080/tasks
    networks:
      - app-network
    container_name: task-frontend-prod
    profiles:
      - production

  # Mock Backend Service (for testing without real backend)
  mock-backend:
    image: node:20-alpine
    working_dir: /app
    command: >
      sh -c "
        npm install -g json-server &&
        echo '{
          \"tasks\": [
            {
              \"id\": \"1\",
              \"name\": \"Sample Task\",
              \"owner\": \"John Doe\",
              \"command\": \"echo Hello World\",
              \"taskExecutions\": []
            }
          ]
        }' > db.json &&
        json-server --watch db.json --host 0.0.0.0 --port 8080 --routes routes.json
      "
    ports:
      - "8080:8080"
    volumes:
      - ./mock-data:/app
    networks:
      - app-network
    container_name: task-mock-backend
    profiles:
      - mock

networks:
  app-network:
    driver: bridge
